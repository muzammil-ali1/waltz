/*
 * Waltz - Enterprise Architecture
 * Copyright (C) 2016, 2017, 2018, 2019 Waltz open source project
 * See README.md for more information
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific
 *
 */
import _ from "lodash";


export function store($http, BaseApiUrl) {
    const BASE = `${BaseApiUrl}/vulnerability`;

    const countSeveritiesBySelector = (id, kind = "SOFTWARE_VERSION", scope = "EXACT") => {
        const options = _.isObject(id)
            ? id
            : {scope, entityReference: {id, kind}};

        return $http.post(`${BASE}/count-severities/selector`, options)
            .then(result => result.data);
    };

    return {
        countSeveritiesBySelector
    };

}

store.$inject = [
    "$http",
    "BaseApiUrl"
];


export const serviceName = "VulnerabilityStore";


export const VulnerabilityStore_API = {
    countSeveritiesBySelector: {
        serviceName,
        serviceFnName: "countSeveritiesBySelector",
        description: "retrieve vulnerability severity counts for a given selector"
    }
};

